<div id="dasboardContainer" class="dasboardContainer">
  <div class="dasboardFsContainer" data-bind="attr: {id: 'dasboardFsContainer_webcam_' + settingsViewModel.settings.plugins.dashboard.showWebCam()}">
    <input class="dashboardIcon" id="fullScreenIcon" title="Fullscreen (Esc to cancel)" type="image" src="plugin/dashboard/static/img/fullscreen-icon.png" data-bind="click: fullScreen, visible: settingsViewModel.settings.plugins.dashboard.showFullscreen()" />

    <!-- HTML grid-based layout. Set to 3 columns wide in css -->
    <div class="dasboardGridContainer">

      <!-- System Info-->
      <div class="dashboardGridItem" data-bind="visible: settingsViewModel.settings.plugins.dashboard.showSystemInfo()">
        <img class="dashboardIcon" title="CPU Usage" src="plugin/dashboard/static/img/cpu-icon.png">
        <div class="inline">
          <span id="profileInfo" data-bind="attr: { title: 'CPU Usage' }, html: cpuPercent() + '%'"></span>
          <span class="dashboardSmall" id="cpuTemp" data-bind="attr: { title: 'CPU Temperature' }, html: cpuTemp() + '°C'"></span>
        </div>
      </div>
      <div class="dashboardGridItem" data-bind="visible: settingsViewModel.settings.plugins.dashboard.showSystemInfo()">
        <img class="dashboardIcon" title="RAM Usage" src="plugin/dashboard/static/img/ram-icon.png">
        <span id="connectionInfo" data-bind="attr: { title: 'Ram Usage' }, html: virtualMemPercent() + '%'"></span>
      </div>
      <div class="dashboardGridItem" data-bind="visible: settingsViewModel.settings.plugins.dashboard.showSystemInfo()">
        <img class="dashboardIcon" title="Disk Usage" src="plugin/dashboard/static/img/hdd-icon.png">
        <span id="stateInfo" data-bind="attr: { title: 'Disk Usage' }, html: diskUsagePercent() + '%'"></span>
      </div>

      <div class="dashboardGridItem" data-bind="visible: settingsViewModel.settings.plugins.dashboard.showSystemInfo() && settingsViewModel.settings.plugins.dashboard.showSensorInfo()">
        <img class="dashboardIcon" title="Ambient Sensor" src="plugin/dashboard/static/img/ambient-sensor-icon.png">
        <div class="inline">
          <span id="TempSensorInfo" data-bind="attr: { title: 'Ambient Temp Sensor' }, html: ambientTemperature() + '°C'"></span>
          <span class="dashboardSmall" id="HumiditySensorInfo" data-bind="attr: { title: 'Ambient Humidity Sensor' }, html: ambientHumidity() + '%'"></span>
        </div>
      </div>
      <div class="dashboardGridItem" data-bind="visible: settingsViewModel.settings.plugins.dashboard.showSystemInfo() && settingsViewModel.settings.plugins.dashboard.showSensorInfo()">
      </div>
      <div class="dashboardGridItem" data-bind="visible: settingsViewModel.settings.plugins.dashboard.showSystemInfo() && settingsViewModel.settings.plugins.dashboard.showSensorInfo()">
      </div>

      <!-- Current Profile, Connection state, and current status-->
      <div class="dashboardGridItem">
        <img class="dashboardIcon" title="Printer profile" src="plugin/dashboard/static/img/printer-icon.png">
        <span id="profileInfo" data-bind="attr: { title: 'Profile name' }, html: printerProfilesModel.currentProfileData().name()"></span>
      </div>
      <div class="dashboardGridItem" data-bind="DashboardContextMenu: connectionMenu">
        <img class="dashboardIcon" title="Connection status" src="plugin/dashboard/static/img/usb-icon.png">
        <span id="connectionInfo" data-bind="attr: { title: 'Connection status' }, html: formatConnectionstatus(connectionModel.isOperational())"></span>
      </div>
      <div class="dashboardGridItem">
        <img class="dashboardIcon" title="Printer status" src="plugin/dashboard/static/img/status-icon.png">
        <span id="stateInfo" data-bind="attr: { title: 'Printer status' }, html: printerStateModel.stateString()"></span>
      </div>
      

      <!-- Temps and Fan -->

      <!-- ko foreach: temperatureModel.tools -->
      <div class="dashboardGridItem" data-bind="visible: ($parent.temperatureModel.isOperational() && !$parent.settingsViewModel.settings.plugins.dashboard.hideHotend()) || ( $parent.temperatureModel.isOperational() && target() > 0 && $parent.settingsViewModel.settings.plugins.dashboard.hideHotend() )">
        <img class="dashboardIcon" title="Hotend temp (target temp)" src="plugin/dashboard/static/img/hotend-icon.png">
        <svg xmlns="http://www.w3.org/2000/svg" height="120" width="120" viewBox="0 0 200 200">
          <path class="bg" stroke="#ccc" d="M41 149.5a77 77 0 1 1 117.93 0" fill="none"/>
          <path class="dashboardGauge" stroke="#09c" d="M41 149.5a77 77 0 1 1 117.93 0" fill="none" stroke-dasharray="350" data-bind="attr: { 'stroke-dashoffset': $parent.formatTempOffset(actual(), $parent.settingsViewModel.settings.plugins.dashboard.hotendTempMax()) }"/>
          <path class="target" stroke="gray" d="M41 149.5a77 77 0 1 1 117.93 0" fill="none" stroke-dasharray="350" data-bind="attr: { 'stroke-dashoffset': $parent.formatTempOffset(target(), $parent.settingsViewModel.settings.plugins.dashboard.hotendTempMax()) }" />
          <text class="dashboardGauge" font-size="30" x="50%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="#08c" data-bind="html: Math.round(actual()) + '°C'"></text>
          <text class="dashboardGauge" font-size="20" x="50%" y="65%" dominant-baseline="middle" text-anchor="middle" fill="#08c" data-bind="html: name()"></text>
          <text class="dashboardGauge" font-size="20" x="50%" y="85%" dominant-baseline="middle" text-anchor="middle" fill="#08c" data-bind="html: 'Target: ' + target() + '°C' "></text>
        </svg>
      </div>
      <!-- /ko -->

      <!-- Bed temp -->
      <div class="dashboardGridItem" data-bind="visible: temperatureModel.isOperational() && temperatureModel.hasBed">
        <img class="dashboardIcon" title="Bed temp (target temp)" src="plugin/dashboard/static/img/bed-icon.png">
        <svg xmlns="http://www.w3.org/2000/svg" height="120" width="120" viewBox="0 0 200 200">
          <path class="bg" stroke="#ccc" d="M41 149.5a77 77 0 1 1 117.93 0" fill="none" />
          <path class="dashboardGauge" stroke="#09c" d="M41 149.5a77 77 0 1 1 117.93 0" fill="none" stroke-dasharray="350" data-bind="attr: { 'stroke-dashoffset': formatTempOffset(temperatureModel.bedTemp.actual(), settingsViewModel.settings.plugins.dashboard.bedTempMax()) }" />
          <path class="target" stroke="gray" d="M41 149.5a77 77 0 1 1 117.93 0" fill="none" stroke-dasharray="350" data-bind="attr: { 'stroke-dashoffset': formatTempOffset(temperatureModel.bedTemp.target(), settingsViewModel.settings.plugins.dashboard.bedTempMax()) }"/>
          <text class="dashboardGauge" font-size="30" x="50%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="#08c" data-bind="html: Math.round(temperatureModel.bedTemp.actual()) + '°C'"></text>
          <text class="dashboardGauge" font-size="20" x="50%" y="85%" dominant-baseline="middle" text-anchor="middle" fill="#08c" data-bind="html: 'Target: ' + temperatureModel.bedTemp.target() + '°C' "></text>
        </svg>
      </div>

      <!-- Chamber temp -->
      <div class="dashboardGridItem" data-bind="visible: temperatureModel.isOperational() && temperatureModel.hasChamber">
        <img class="dashboardIcon" title="Chamber temp (target temp)" src="plugin/dashboard/static/img/chamber-icon.png">
        <svg xmlns="http://www.w3.org/2000/svg" height="120" width="120" viewBox="0 0 200 200">
          <path class="bg" stroke="#ccc" d="M41 149.5a77 77 0 1 1 117.93 0" fill="none" />
          <path class="dashboardGauge" stroke="#09c" d="M41 149.5a77 77 0 1 1 117.93 0" fill="none" stroke-dasharray="350" data-bind="attr: { 'stroke-dashoffset': formatTempOffset(temperatureModel.chamberTemp.actual(), settingsViewModel.settings.plugins.dashboard.chamberTempMax()) }" />
          <path class="target" stroke="gray" d="M41 149.5a77 77 0 1 1 117.93 0" fill="none" stroke-dasharray="350" data-bind="attr: { 'stroke-dashoffset': formatTempOffset(temperatureModel.chamberTemp.target(), settingsViewModel.settings.plugins.dashboard.chamberTempMax()) }" />
          <text class="dashboardGauge" font-size="30" x="50%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="#08c" data-bind="html: Math.round(temperatureModel.chamberTemp.actual()) + '°C'"></text>
          <text class="dashboardGauge" font-size="20" x="50%" y="85%" dominant-baseline="middle" text-anchor="middle" fill="#08c" data-bind="html: 'Target: ' + temperatureModel.chamberTemp.target() + '°C' "></text>
        </svg>
      </div>

      <!-- Fan Speed -->
      <div class="dashboardGridItem" data-bind="visible: temperatureModel.isOperational() && settingsViewModel.settings.plugins.dashboard.showFan()">
        <img class="dashboardIcon" title="Fan Speed" src="plugin/dashboard/static/img/fan-icon.png">
        <svg xmlns="http://www.w3.org/2000/svg" height="120" width="120" viewBox="0 0 200 200">
          <text class="dashboardGauge" font-size="30" x="50%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="#08c" data-bind="attr: { title: 'Fan Speed' }, html: fanspeed"></text>
          <path class="bg" stroke="#ccc" d="M41 149.5a77 77 0 1 1 117.93 0" fill="none" />
          <path class="dashboardGauge" stroke="#09c" d="M41 149.5a77 77 0 1 1 117.93 0" fill="none" stroke-dasharray="350" data-bind="attr: { 'stroke-dashoffset': formatFanOffset(fanspeed()) }" />
          <text class="dashboardGauge" font-size="20" x="50%" y="85%" dominant-baseline="middle" text-anchor="middle" fill="#08c">Fan Speed</text>
        </svg>
      </div>
    </div>

    <!-- Printer Message-->
    <div class="dashboardGridItem" data-bind="visible: printerStateModel.isPrinting() && settingsViewModel.settings.plugins.dashboard.showPrinterMessage()">
       <span class="dashboardSmall" id="printerMessage" data-bind="attr: { title: 'M117 Printer message' }, html: printerMessage()"></span>
    </div>


    <!-- Progress Circle-->
    <div class="progressContainer" data-bind="visible: settingsViewModel.settings.plugins.dashboard.showProgress() || settingsViewModel.settings.plugins.dashboard.showLayerProgress()">
      <div>
        <!-- Job Progress Circle-->
        <div class="dashboardProgressContainer" data-bind="visible: printerStateModel.isPrinting() && settingsViewModel.settings.plugins.dashboard.showProgress() && (settingsViewModel.settings.plugins.dashboard.gaugetype() == 'circle'), DashboardContextMenu: jobMenu, css: { dashboardLayerProgressInline: settingsViewModel.settings.plugins.dashboard.showProgress() && settingsViewModel.settings.plugins.dashboard.showLayerProgress() }">
          <svg class="current" width="120" height="120" viewBox="0 0 120 120">
            <circle cx="60" cy="60" r="54" fill="none" stroke="#ccc" stroke-width="12" />
            <circle class="dashboardGauge" cx="60" cy="60" r="54" fill="none" stroke="#09c" stroke-width="12" stroke-dasharray="339.292" transform="rotate(-90 60 60)" data-bind="attr: { 'stroke-dashoffset': formatProgressOffset(printerStateModel.progressString()) }" />
            <text class="dashboardGauge" font-size="30" x="50%" y="45%" dominant-baseline="middle" text-anchor="middle" fill="#08c" data-bind="text: printerStateModel.progressBarString()"></text>
            <text class="dashboardGauge" font-size="14" x="50%" y="65%" dominant-baseline="middle" text-anchor="middle" fill="#08c">Job</text>
          </svg>
        </div>
        <!-- Layer Progress Circle-->
        <div class="dashboardProgressContainer dashboardLayerProgressContainer" data-bind="visible: printerStateModel.isPrinting() && settingsViewModel.settings.plugins.dashboard.showLayerProgress() && (settingsViewModel.settings.plugins.dashboard.gaugetype() == 'circle'), DashboardContextMenu: jobMenu, css: { dashboardLayerProgressInline: settingsViewModel.settings.plugins.dashboard.showProgress() && settingsViewModel.settings.plugins.dashboard.showLayerProgress() }">
          <svg class="current" width="120" height="120" viewBox="0 0 120 120">
            <circle cx="60" cy="60" r="54" fill="none" stroke="#ccc" stroke-width="12" />
            <circle class="dashboardGauge" cx="60" cy="60" r="54" fill="none" stroke="#09c" stroke-width="12" stroke-dasharray="339.292" transform="rotate(-90 60 60)" data-bind="attr: { 'stroke-dashoffset': formatProgressOffset(layerProgressString()) }" />
            <text class="dashboardGauge" font-size="30" x="50%" y="45%" dominant-baseline="middle" text-anchor="middle" fill="#08c" data-bind="text: layerProgressBarString()"></text>
            <text class="dashboardGauge" font-size="14" x="50%" y="65%" dominant-baseline="middle" text-anchor="middle" fill="#08c">Layer</text>
          </svg>
        </div>
      </div>
    </div>



    <!-- SVG Progress Bar-->
    <div class="dashboardGridItem" style="text-align:center;" data-bind="visible: settingsViewModel.settings.plugins.dashboard.gaugetype() == 'bar' && printerStateModel.isPrinting() && settingsViewModel.settings.plugins.dashboard.showProgress(), DashboardContextMenu: jobMenu ">
      <h5 style="display: inline;">Job: </h5>
      <span data-bind="attr: { title: 'Printer status' }, html: printerStateModel.progressBarString()"></span>
      <svg preserveAspectRatio="none" width="100%" height="20px" viewBox="0 0 339.292 20">
        <path class="bg" stroke="#ccc" d="M0 10, 339.292 10"></path>
        <path class="dashboardGauge" stroke="#09c" d="M0 10, 339.292 10" stroke-dasharray="339.292" data-bind="attr: { 'stroke-dashoffset': formatProgressOffset(printerStateModel.progressString()) }"></path>
      </svg>
    </div>

    <!-- SVG Layer Progress Bar-->
    <div class="dashboardGridItem" style="text-align:center;" data-bind="visible: settingsViewModel.settings.plugins.dashboard.gaugetype() == 'bar' && printerStateModel.isPrinting() && settingsViewModel.settings.plugins.dashboard.showLayerProgress(), DashboardContextMenu: jobMenu ">
      <h5 style="display: inline;">Layer: </h5>
      <span data-bind="attr: { title: 'Printer status' }, html: layerProgressBarString()"></span>
      <svg preserveAspectRatio="none" width="100%" height="20px" viewBox="0 0 339.292 20">
        <path class="bg" stroke="#ccc" d="M0 10, 339.292 10"></path>
        <path class="dashboardGauge" stroke="#09c" d="M0 10, 339.292 10" stroke-dasharray="339.292" data-bind="attr: { 'stroke-dashoffset': formatProgressOffset(layerProgressString()) }"></path>
      </svg>
    </div>

    <!-- Layer Times Graph-->
    <div class="dashboardGridItem" data-bind="visible: printerStateModel.isPrinting() && settingsViewModel.settings.plugins.dashboard.showLayerGraph()">
      <span title="Layer Durations (seconds/layer)">Layer Durations</span>
      <div class="ct-chart"></div>
    </div>

    <!-- File name -->
    <div class="dashboardGridItem" data-bind="visible: printerStateModel.isPrinting(), DashboardContextMenu: jobMenu">
      <img class="dashboardIcon" src="plugin/dashboard/static/img/file-icon.png">
      <span id="fileInfo" data-bind="attr: { title: 'File' }, html: printerStateModel.filename()"></span>
    </div>

    <div class="dasboardGridContainer">

      <!-- GCode -->
      <div class="dashboardGridItem" data-bind="visible: printerStateModel.isPrinting() && settingsViewModel.settings.plugins.dashboard.showFilament()">
        <img class="dashboardIcon" title="Extruded Filament" src="plugin/dashboard/static/img/filament-icon.png">
        <span id="stateInfo" data-bind="attr: { title: 'Extruded Filament' }, html: extrudedFilament() + 'm' "></span>
      </div>
      <div class="dashboardGridItem" data-bind="visible: printerStateModel.isPrinting() && settingsViewModel.settings.plugins.dashboard.showFilament()">
      </div>
      <div class="dashboardGridItem" data-bind="visible: printerStateModel.isPrinting() && settingsViewModel.settings.plugins.dashboard.showFilament()">
      </div>

      <!-- Times -->
      <div class="dashboardGridItem" data-bind="visible: printerStateModel.isPrinting()">
        <img class="dashboardIcon" title="Estimated total print time" src="plugin/dashboard/static/img/print-time-estimated-icon.png">
        <span class="dashboardLarge" id="printTimeEstimated" data-bind="attr: { title: 'Estimated total print time' }, html: printerStateModel.estimatedPrintTimeString()"></span>
      </div>
      <div class="dashboardGridItem" data-bind="visible: printerStateModel.isPrinting()">
        <img class="dashboardIcon" title="ETA" src="plugin/dashboard/static/img/eta-icon.png">
        <div class="inline">
          <span class="dashboardLarge" id="eta" data-bind="attr: { title: 'ETA' }, html: getEta(printerStateModel.printTimeLeft())"></span><br />
          <span class="dashboardSmall" id="printTimeLeft" data-bind="attr: { title: 'Estimated time left' }, html: printerStateModel.printTimeLeftString() + ' left'"></span>
        </div>
      </div>
      <div class="dashboardGridItem" data-bind="visible: printerStateModel.isPrinting()">
        <img class="dashboardIcon" title="Current print time" src="plugin/dashboard/static/img/print-time-done-icon.png">
        <span class="dashboardLarge" id="printTimeDone" data-bind="attr: { title: 'Current print time' }, html: printerStateModel.printTimeString()"></span>
      </div>

      <!-- Job & Progress -->
      <div class="dashboardGridItem" data-bind="visible: printerStateModel.isPrinting()">
        <img class="dashboardIcon" title="Current Layer" src="plugin/dashboard/static/img/layers-icon.png">
        <span id="currentLayer" data-bind="attr: { title: 'Current Layer' }, html: currentLayer"></span>
        <span class="dashboardSmall" id="totalLayer" data-bind="attr: { title: 'Total Layers' }, html: '/' + totalLayer() + ' layers'"></span>
      </div>
      <div class="dashboardGridItem" data-bind="visible: printerStateModel.isPrinting()">
        <img class="dashboardIcon" title="Current height" src="plugin/dashboard/static/img/height-icon.png">
        <span id="currentHeight" data-bind="attr: { title: 'Current Height' }, html: currentHeight"></span>
        <span class="dashboardSmall" id="totalHeightWithExtrusion" data-bind="attr: { title: 'Total Height' }, html: '/' + totalHeightWithExtrusion() + 'mm'"></span>
      </div>
      <div class="dashboardGridItem" data-bind="visible: printerStateModel.isPrinting()">
        <img class="dashboardIcon" title="Layer Time" src="plugin/dashboard/static/img/layer-time-average-icon.png">
        <span id="averageLayerDuration" data-bind="attr: { title: 'Average Layer Time' }, html: averageLayerDuration()"></span>
      </div>

    </div>

    <!-- Warning if DisplayLayerProgress is not installed -->
    <span id="warn" data-bind="attr: { title: 'Warn' }, html: DisplayLayerProgressAvailable()"></span>
    <br />
  </div>

  <!-- Webcam-->
  <div id="dashboard_webcam_container" data-bind="visible: settingsViewModel.settings.plugins.dashboard.showWebCam()">
    <div id="webcam_rotator" data-bind="css: { webcam_rotated: settingsViewModel.settings.webcam.rotate90(), webcam_unrotated: !settingsViewModel.settings.webcam.rotate90() }">
      <div class="webcam_fixed_ratio" data-bind="css: controlViewModel.webcamRatioClass">
        <div class="webcam_fixed_ratio_inner">
          <img id="dashboard_webcam_image" data-bind="css: { flipH: settingsViewModel.settings.webcam.flipH(), flipV: settingsViewModel.settings.webcam.flipV()}, attr: {src: embedUrl()}"/>
        </div>
      </div>
    </div>
  </div>
  

</div>